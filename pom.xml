<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>io.delimeat</groupId>
	<artifactId>delimeat</artifactId>
	<version>0.3-SNAPSHOT</version>
	<packaging>jar</packaging>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://opensource.org/licenses/Apache-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/delimeat/delimeat.git</connection>
		<developerConnection>scm:git:git://github.com/delimeat/delimeat.git</developerConnection>
		<url>https://github.com/delimeat/delimeat</url>
	</scm>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${org.springframework.boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${org.liquibase.version}</version>
				<configuration>
					<propertyFile>liquibase.properties</propertyFile>
				</configuration>
			</plugin>
	

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
				</configuration>
			</plugin>

			
			<!-- Front end build ! -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${com.github.eirslett.version}</version>
				<!--
				<configuration>
			        <workingDirectory>frontend</workingDirectory>
					<installDirectory>target</installDirectory> 
				</configuration> 
				! -->
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<npmVersion>${npm.version}</npmVersion>
						</configuration>
					</execution>
		
					<execution>
						<id>npm install</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
		
					<execution>
						<id>bower install</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>bower</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
		
					<execution>
						<id>gulp build</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>gulp</goal>
						</goals>
						<configuration>
							<srcdir>${basedir}/frontend</srcdir>
							<outputdir>${project.build.directory}/${project.build.finalName}/static</outputdir>
							<triggerfiles>
								<triggerfile>gulpfile.js</triggerfile>
								<triggerfile>package.json</triggerfile>
							</triggerfiles>
							<environmentVariables>
								<BUILD_DIR>${project.build.directory}/frontend</BUILD_DIR>
								<TEMP_DIR>${project.build.directory}/tmp</TEMP_DIR>
								<OUTPUT_DIR>${project.build.directory}/${project.build.finalName}/static</OUTPUT_DIR>
							</environmentVariables>
						</configuration>
					</execution>
					
				</executions>
			</plugin>
    
		</plugins>
	</build>

	<properties>
		<!-- Project specific stuff ! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		
		<node.version>v7.0.0</node.version>
		<npm.version>4.0.2</npm.version>
		
		<!-- Maven plugins  -->
		<org.jacoco.version>0.7.9</org.jacoco.version>
		<org.eluder.coveralls.version>4.3.0</org.eluder.coveralls.version>
		<com.github.eirslett.version>1.2</com.github.eirslett.version>
		<org.liquibase.version>3.5.3</org.liquibase.version>

		<!-- Test versions ! -->
		<org.junit.version>4.12</org.junit.version>
		<org.mockito.version>2.6.8</org.mockito.version>
     	<com.github.tomakehurst.wiremock.version>2.6.0</com.github.tomakehurst.wiremock.version>
     	<com.jayway.jsonpath.version>2.2.0</com.jayway.jsonpath.version>

		<!-- Runtime versions ! -->
		<org.springframework.boot.version>1.5.2.RELEASE</org.springframework.boot.version>
		<!--  
		<org.springframework.version>4.3.7.RELEASE</org.springframework.version>
		!-->
		<com.fasterxml.jackson.core.version>2.8.8</com.fasterxml.jackson.core.version>

		<org.apache.derby.version>10.12.1.1</org.apache.derby.version>
		
		<org.glassfish.jersey.version>2.25.1</org.glassfish.jersey.version>

		<org.jsoup.version>1.10.2</org.jsoup.version>
		<com.google.guava.version>21.0</com.google.guava.version>
		<com.github.ben-manes.caffeine.version>2.4.0</com.github.ben-manes.caffeine.version>
	</properties>

	<dependencies>

		<!-- TEST ! -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${org.junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${org.mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${org.springframework.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<version>${com.github.tomakehurst.wiremock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-inmemory</artifactId>
			<version>${org.glassfish.jersey.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- SPRING BOOT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
            <version>${org.springframework.boot.version}</version>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${org.springframework.boot.version}</version>
        </dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${org.springframework.boot.version}</version>
        </dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
            <version>${org.springframework.boot.version}</version>
        </dependency>
        
		<!-- Jackson -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${com.fasterxml.jackson.core.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${com.fasterxml.jackson.core.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>${com.fasterxml.jackson.core.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.module</groupId>
		    <artifactId>jackson-module-parameter-names</artifactId>
		    <version>${com.fasterxml.jackson.core.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jdk8</artifactId>
		    <version>${com.fasterxml.jackson.core.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		    <version>${com.fasterxml.jackson.core.version}</version>
		</dependency>

		<!-- REST ! -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		
		<!-- DATABASE -->
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>${org.apache.derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>${org.apache.derby.version}</version>
		</dependency>

		<!-- OTHER ! -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.16.16</version>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${org.jsoup.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${com.google.guava.version}</version>
		</dependency>
		<dependency>
    		<groupId>com.github.ben-manes.caffeine</groupId>
   			<artifactId>caffeine</artifactId>
    		<version>${com.github.ben-manes.caffeine.version}</version>
		</dependency>

		
		<!-- SPRING -->
		<!-- 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		!-->
		<!-- 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		!-->
		
	</dependencies>

	<profiles>
		<profile>
			<id>travis</id>
			<activation>
				<property>
					<name>env.TRAVIS</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>${org.eluder.coveralls.version}</version>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${org.jacoco.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>frontend</id>
			<activation>
			</activation>
			<build>
				<plugins>
					<!-- Front end build ! -->
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${com.github.eirslett.version}</version>
						<!--
						<configuration>
					        <workingDirectory>frontend</workingDirectory>
							<installDirectory>target</installDirectory> 
						</configuration> 
						! -->
						<executions>
							<execution>
								<id>install node and npm</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<npmVersion>${npm.version}</npmVersion>
								</configuration>
							</execution>
				
							<execution>
								<id>npm install</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
				
							<execution>
								<id>bower install</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>bower</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
				
							<execution>
								<id>gulp build</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>gulp</goal>
								</goals>
								<configuration>
									<srcdir>${basedir}/frontend</srcdir>
									<outputdir>${project.build.directory}/${project.build.finalName}/static</outputdir>
									<triggerfiles>
										<triggerfile>gulpfile.js</triggerfile>
										<triggerfile>package.json</triggerfile>
									</triggerfiles>
									<environmentVariables>
										<BUILD_DIR>${project.build.directory}/frontend</BUILD_DIR>
										<TEMP_DIR>${project.build.directory}/tmp</TEMP_DIR>
										<OUTPUT_DIR>${project.build.directory}/${project.build.finalName}/static</OUTPUT_DIR>
									</environmentVariables>
								</configuration>
							</execution>
							
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>

	
</project>